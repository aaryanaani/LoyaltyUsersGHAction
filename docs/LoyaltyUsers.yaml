openapi: 3.0.1
info:
  title: Loyalty Users API
  version: 1.0.1
  description: Loyalty Users API's are used to manage Users in SessionM
servers:
  - url: https://loyalty-gb-dev.skechers.com/loyalty

paths:
  /users/{userId}:
    get:
      tags:
        - loyalty-users-controller
      summary: Find a user by id in SessionM
      description: Returns a user object    
      operationId: userEventByUserId
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]      
        - name: userId
          description: SessionM id
          in: path
          required: true
          schema:
            type: string
        - name: profile
          in: query
          required: false
          schema:
            type: string
            enum: [complete, basic]
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.user-v1+json:
              schema:
                $ref: '#/components/schemas/UserLookupResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'                                  
    put:
      tags:
        - loyalty-users-controller
      operationId: updateUserById
      summary: Update  user by id in SessionM
      description: Returns a user object      
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
        - name: userId
          description: SessionM id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.user-v1+json:
              schema:
                $ref: '#/components/schemas/UserLookupResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'                  
    delete:
      tags:
        - loyalty-users-controller
      summary: Delete user by id in SessionM
      description: Deletes user in SessionM      
      operationId: deleteUserById
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
        - name: userId
          description: SessionM id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'                  
  /users:
    get:
      tags:
        - loyalty-users-controller
      operationId: multipleUserDetailsByProfileType
      summary: Get users by userIds in SessionM
      description: Returns a list of user objects
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
        - name: userIds
          description: SessionM ids
          in: query
          required: true
          schema:
            type: array
            items:
              type: string
        - name: profile
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.users-v1+json:
              schema:
                $ref: '#/components/schemas/MultipleUserLookupResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'                  
    post:
      tags:
        - loyalty-users-controller
      summary: Create User in SessionM
      description: Returns newly created user object
      operationId: createUser
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.user-v1+json:
              schema:
                $ref: '#/components/schemas/CreateUserResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'  
                                
  /users/registration:
    post:
      tags:
        - loyalty-users-controller
      summary: Trigger Registration event in SessionM
      description: Register User in SessionM      
      operationId: registration
      parameters: 
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationPayload'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'                  
  /users/search:
    get:
      tags:
        - loyalty-users-controller
      summary: Search user by email or phone in SessionM
      description: Returns a user object matching email or phone       
      operationId: userLookup
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
        - name: email
          description: email address of the user
          in: query
          required: false
          schema:
            type: string
        - name: phone
          description: phone number of the user
          in: query
          required: false
          schema:
            type: string
        - name: profile
          in: query
          required: false
          schema:
            type: string
            enum: [complete, basic]
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.usersearch-v1+json:
              schema:
                $ref: '#/components/schemas/UserLookupResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'  
                                
  /users/external/{externalId}:
    get:
      tags:
        - loyalty-users-controller
      summary: Get user by externalId fromn SessionM
      description: Returns a user object       
      operationId: userDetailsByExternalId
      parameters:
        - name: x-api-key
          description: API Key provided to the client         
          in: header
          required: true
          schema:
            type: string         
        - name: country
          in: header
          required: true
          schema:
            type: string
            enum: [USA, CAN, DEU, ESP, GBR]            
        - name: locale
          in: header
          required: true
          schema:
            type: string   
            enum: [en-US, en-EU, en-GB, de-DE, en-CA, fr-CA, es-ES]       
        - name: externalId
          description:  external identifier in SessionM
          in: path
          required: true
          schema:
            type: string
        - name: profile
          in: query
          required: false
          schema:
            type: string
            enum: [complete, basic]
      responses:
        '200':
          description: OK
          content:
            application/vnd.loyalty.user-v1+json:
              schema:
                $ref: '#/components/schemas/UserLookupResponse'
        '400':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400Error'
        '401':
          description: Authorization Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401Error'    
        '403':
          description: Missing / Invalid Authentication Token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403Error'    
        '404':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404Error'        
        '500':
          description: Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/500Error'  
                                
  /users/application-status:
    get:
      tags:
        - loyalty-users-controller
      summary: Display application status
      description: Returns a Status object    
      operationId: appStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationStatus'

components:
  schemas:
    Identifiers:
      type: object
      properties:
        external_id:
          type: string
        external_id_type:
          type: string
    PhoneNumbers:
      type: object
      properties:
        phone_number:
          type: string
        phone_type:
          type: string
        preference_flags:
          type: array
          items:
            type: string
    UpdateUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UsersDetails'
    UserProfile:
      type: object
      properties:
        email_opt_in:
          type: boolean
        signup_channel:
          type: string
        user_status:
          type: string
        store_no:
          type: integer
          format: int64
        registration_date:
          type: string
    UsersDetails:
      type: object
      properties:
        external_id:
          type: string
        auth_token:
          type: boolean
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifiers'
        opted_in:
          type: boolean
        dob:
          type: string
        external_id_type:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumbers'
        user_profile:
          $ref: '#/components/schemas/UserProfile'
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        state:
          type: string
        country:
          type: string
        locale:
          type: string
    Details:
      type: object
      properties:
        account_name:
          type: string
        user_point_account_id:
          type: string
        point_account_id:
          type: string
        grouping_label:
          type: string
        available_balance:
          type: number
        life_time_value:
          type: number
    NextTierOverview:
      type: object
      properties:
        id:
          type: string
        tier_system_id:
          type: string
        retailer_id:
          type: string
        name:
          type: string
        rank:
          type: number
        status:
          type: number
    PointAccountBalances:
      type: object
      properties:
        retailer_id:
          type: string
        user_id:
          type: string
        summary:
          $ref: '#/components/schemas/Summary'
        details:
          type: array
          items:
            $ref: '#/components/schemas/Details'
    Rule:
      type: object
      properties:
        discriminator:
          type: number
        target_balance:
          type: number
        comparison:
          type: number
        id:
          type: string
        retailer_id:
          type: string
        parent_id:
          type: string
        rank:
          type: number
        is_new:
          type: boolean
        constraints:
          type: array
          items:
            type: object
    Rules:
      type: object
      properties:
        query_result:
          type: number
        rule_id:
          type: string
        parent_id:
          type: string
        tree_id:
          type: string
        rule_passed:
          type: boolean
        rule:
          $ref: '#/components/schemas/Rule'
        discriminator:
          type: number
        rule_tree_name:
          type: string
    Summary:
      type: object
      properties:
        total_points:
          type: number
        life_time_points:
          type: number
    TierDetails:
      type: object
      properties:
        tier_levels:
          type: array
          items:
            $ref: '#/components/schemas/TierLevels'
        point_account_balances:
          $ref: '#/components/schemas/PointAccountBalances'
    TierLevels:
      type: object
      properties:
        id:
          type: string
        tier_system_id:
          type: string
        tier_level_id:
          type: string
        user_id:
          type: string
        join_date:
          type: string
        tier_overview:
          $ref: '#/components/schemas/TierOverview'
        next_tier_overview:
          $ref: '#/components/schemas/NextTierOverview'
        tier_progress:
          type: array
          items:
            $ref: '#/components/schemas/TierProgress'
    TierOverview:
      type: object
      properties:
        id:
          type: string
        tier_system_id:
          type: string
        retailer_id:
          type: string
        name:
          type: string
        rank:
          type: number
        status:
          type: number
    TierProgress:
      type: object
      properties:
        rule_tree_id:
          type: string
        rules:
          type: array
          items:
            $ref: '#/components/schemas/Rules'
    UserDetails:
      type: object
      properties:
        id:
          type: string
        external_id:
          type: string
        opted_in:
          type: boolean
        activated:
          type: boolean
        proxy_ids:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifiers'
        available_points:
          type: number
        test_points:
          type: number
        unclaimed_achievement_count:
          type: number
        email:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        dob:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        country:
          type: string
        suspended:
          type: boolean
        last_name:
          type: string
        first_name:
          type: string
        registered_at:
          type: string
        profile_photo_url:
          type: string
        test_account:
          type: boolean
        account_status:
          type: string
        tier:
          type: string
        tier_system:
          type: string
        tier_points:
          type: number
        next_tier_points:
          type: number
        tier_ends_value:
          type: number
        tier_entered_at:
          type: string
        tier_resets_at:
          type: string
        maintenance_required_points:
          type: number
        maintenance_points:
          type: number
        tier_details:
          $ref: '#/components/schemas/TierDetails'
        referrer_code:
          type: string
        user_profile:
          $ref: '#/components/schemas/UserProfile'
        auth_token:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumbers'
    UserLookupResponse:
      type: object
      properties:
        status:
          type: string
        user:
          $ref: '#/components/schemas/UserDetails'
    CreateUser:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/UserDetails'
    CreateUserResponse:
      type: object
      properties:
        status:
          type: string
        user:
          $ref: '#/components/schemas/UserDetails'
    RegistrationPayload:
      type: object
      properties:
        subscriberKey:
          type: string
        userId:
          type: string
        webRegistration:
          type: boolean
    MultipleUserDetails:
      type: object
      properties:
        id:
          type: string
        external_id:
          type: string
        opted_in:
          type: boolean
        activated:
          type: boolean
        proxy_ids:
          type: array
          items:
            type: string
        identifiers:
          type: array
          items:
            $ref: '#/components/schemas/Identifiers'
        available_points:
          type: number
        test_points:
          type: number
        unclaimed_achievement_count:
          type: number
        email:
          type: string
        created_at:
          type: string
        updated_at:
          type: string
        dob:
          type: string
        address:
          type: string
        address2:
          type: string
        city:
          type: string
        zip:
          type: string
        country:
          type: string
        locale:
          type: string
        suspended:
          type: boolean
        last_name:
          type: string
        first_name:
          type: string
        registered_at:
          type: string
        profile_photo_url:
          type: string
        test_account:
          type: boolean
        unknown:
          type: boolean
        account_status:
          type: string
        tier:
          type: string
        tier_system:
          type: string
        tier_points:
          type: number
        next_tier_points:
          type: number
        tier_ends_value:
          type: number
        tier_entered_at:
          type: string
        tier_resets_at:
          type: string
        maintenance_required_points:
          type: number
        maintenance_points:
          type: number
        tier_details:
          $ref: '#/components/schemas/TierDetails'
        referrer_code:
          type: string
        user_profile:
          $ref: '#/components/schemas/UserProfile'
        auth_token:
          type: string
        phone_numbers:
          type: array
          items:
            $ref: '#/components/schemas/PhoneNumbers'
    MultipleUserLookupResponse:
      type: object
      properties:
        status:
          type: string
        users:
          type: array
          items:
            $ref: '#/components/schemas/MultipleUserDetails'
            
    ApplicationStatus:
      type: object
      properties:
        environment:
          type: string
        region:
          type: string
        version:
          type: string
          
    400Error:
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: string
        error:
          type: string
        message:
          type: object

    401Error:
      type: object
      properties:
        message:
          type: string          
                    
    404Error:
      type: object
      properties:
        message:
          type: string       
          
    403Error:
      type: object
      properties:
        message:
          type: string           

    500Error:
      type: object
      properties:
        message:
          type: string                   